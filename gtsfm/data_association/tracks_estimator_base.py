"""Implements a base class for estimating tracks from feature correspondences.

Authors: Travis Driver
"""

import abc
from typing import List, Dict, Tuple

import numpy as np

from gtsfm.common.sfm_track import SfmTrack2d
from gtsfm.common.keypoints import Keypoints

from gtsfm.ui.gtsfm_process import GTSFMProcess, UiMetadata


class TracksEstimatorBase(GTSFMProcess):
    """Base class for track estimation."""

    def get_ui_metadata() -> UiMetadata:
        """Returns data needed to display this process in the process graph."""

        return UiMetadata("Tracks Estimator", ("Keypoints", "Pairwise Feature Matches"), ("2D Tracks"))

    @abc.abstractmethod
    def run(self, matches_dict: Dict[Tuple[int, int], np.ndarray], keypoints_list: List[Keypoints]) -> List[SfmTrack2d]:
        """Estimate tracks from feature correspondences.

        Args:
            matches_dict: Dict of pairwise matches of type:
                    key: indices for the matched pair of images
                    val: feature indices, as array of Nx2 shape; N being number of features. A row is (feature_idx1,
                         feature_idx2).
            keypoints_list: List of keypoints for each image.

        Returns:
            list of all valid SfmTrack2d generated by the matches.
        """
